name: Build & Deploy Rentify Web

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  REGISTRY_NAME: ${{ secrets.REGISTRY_NAME }}
  IMAGE_NAME: ${{ secrets.REGISTRY_NAME }}/rentify-web:latest

jobs:
  test:
    name: Build .NET (no tests yet)
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET 8 SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore
        run: dotnet restore "Rentify.RazorWebApp/Rentify.RazorWebApp.csproj"

      - name: Build
        run: dotnet build "Rentify.RazorWebApp/Rentify.RazorWebApp.csproj" -c Release --no-restore

      # Nếu bạn thêm unit test sau này, thêm dotnet test tại đây

  build-and-push:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    needs: test
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: DockerHub Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build & Push
        run: |
          docker build -t $IMAGE_NAME -f Rentify.RazorWebApp/Dockerfile .
          docker push $IMAGE_NAME

  deploy:
    name: Deploy to VPS
    runs-on: ubuntu-latest
    needs: build-and-push
    timeout-minutes: 30
    steps:
      - name: Checkout (for compose file inline generation)
        uses: actions/checkout@v4

      - name: Create compose locally
        run: |
          mkdir -p composeout
          cat > composeout/docker-compose.yaml <<'EOF'
          version: "3.8"
          services:
            rentify-web:
              image: ${REGISTRY_NAME}/rentify-web:latest
              container_name: rentify-web
              restart: unless-stopped
              environment:
                - ASPNETCORE_ENVIRONMENT=Production
              ports:
                - "8082:8080"
              networks:
                - mamafit-network
          networks:
            mamafit-network:
              external: true
          EOF

      - name: Copy docker-compose.yaml to VPS
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          source: "composeout/docker-compose.yaml"
          target: "~/rentify"
          overwrite: true
          strip_components: 1

      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            set -e
            mkdir -p ~/rentify
            cd ~/rentify
            echo "REGISTRY_NAME=${{ secrets.REGISTRY_NAME }}" > .env
            echo "${{ secrets.DOCKER_HUB_TOKEN }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin
            docker pull ${{ env.IMAGE_NAME }}
            docker compose up -d --pull always --no-deps --force-recreate rentify-web
            docker ps -a | grep rentify-web

  notify-success:
    name: Notify (Success)
    runs-on: ubuntu-latest
    needs: deploy
    if: success()
    steps:
      - name: Discord Webhook (optional)
        if: ${{ secrets.DISCORD_WEBHOOK_URL != '' }}
        run: |
          TIMESTAMP=$(date -u +%Y-%m-%dT%H:%M:%SZ)
          curl -H "Content-Type: application/json" -X POST -d "{
            \"embeds\": [{
              \"title\": \"✅ Rentify Web - Deployment Successful\",
              \"description\": \"App đã chạy trên VPS (port 8082) hoặc qua Nginx Proxy Manager.\",
              \"color\": 5763719,
              \"fields\": [
                { \"name\": \"Image\", \"value\": \"${{ env.IMAGE_NAME }}\" },
                { \"name\": \"Host Port\", \"value\": \"8082\" }
              ],
              \"timestamp\": \"$TIMESTAMP\"
            }]
          }" ${{ secrets.DISCORD_WEBHOOK_URL }}

  notify-failure:
    name: Notify (Failure)
    runs-on: ubuntu-latest
    needs: [test, build-and-push, deploy]
    if: failure()
    steps:
      - name: Discord Webhook (optional)
        if: ${{ secrets.DISCORD_WEBHOOK_URL != '' }}
        run: |
          TIMESTAMP=$(date -u +%Y-%m-%dT%H:%M:%SZ)
          curl -H "Content-Type: application/json" -X POST -d "{
            \"embeds\": [{
              \"title\": \"❌ Rentify Web - Deployment Failed\",
              \"description\": \"CI/CD lỗi. Kiểm tra logs GitHub Actions.\",
              \"color\": 15158332,
              \"fields\": [
                { \"name\": \"Run\", \"value\": \"https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}\" }
              ],
              \"timestamp\": \"$TIMESTAMP\"
            }]
          }" ${{ secrets.DISCORD_WEBHOOK_URL }}
